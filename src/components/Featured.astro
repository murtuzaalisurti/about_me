---
import ogs from "open-graph-scraper";
import type { SuccessResult } from "open-graph-scraper/types";

type BaseItem = {
    id: string;
    link: string;
};

type Item = BaseItem & SuccessResult["result"];

interface Props {
    list: Item[];
}

const { list } = Astro.props;

// console.log(`beginning....`, list.length)

for (let [_, item] of list.entries()) {
    const { error, result } = await ogs({
        url: item.link,
    });

    if (error) {
        console.log('there was an error', error);
        return;
    }

    if (result.success) {
        Object.keys(result).forEach((key) => {
            const typedKey = key as keyof typeof item & keyof typeof result;
            item = {
                ...item,
                [typedKey]: result[typedKey],
            };
        });
        list[_] = item;
    }
}

// console.log(list.forEach((item) => {
//     // console.log('logging item-----');
//     // console.log(JSON.stringify(item.ogImage, null, 2))
// }));
// console.log(list.length, list);
---

<div class="showcase-container">
    {
        list.map((item) => {
            console.log(JSON.stringify(item, null, 2))
            return (
                <div class="showcase">
                    <div class="link-preview">
                        <img
                            class="link-preview-img"
                            src={item.ogImage?.[0].url}
                            alt={item.ogTitle}
                        />
                        <div class="link-text">
                            <a href={item.link}>
                                {item.ogTitle}
                            </a>
                            <p class="host">{new URL(item.link).host.replaceAll(new RegExp("w", "gi"), "").slice(1)}</p>
                        </div>
                    </div>
                </div>
            );
        })
    }
</div>
